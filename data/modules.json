{
    "all-modules": [
        {
            "day": "1",
            "title": "Day 1: Understanding How the Web Works",
            "body": "Welcome to the first day of your web development journey! Today, we'll start by exploring the fundamental concepts of how the web works. Understanding this will give you a solid foundation for everything else you'll learn. We'll cover how browsers and servers interact, what HTTP is, and how web pages are delivered to your browser. This knowledge is crucial because it helps you understand the role of each component in web development, making it easier to troubleshoot and optimize your future projects.\n\nWhat to Learn: \n - Basics of web architecture\n- Role of browsers and servers\n- How HTTP works\n- Overview of web technologies (HTML, CSS, JavaScript)\n\nHow to Learn:\n- Start with a conceptual overview of the web.\n- Read through the detailed explanations on MDN Web Docs to understand each component's role.\n- Watch the short video to visualize the process.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works",
            "youtube_video": "https://www.youtube.com/embed/7_LPdttKXPc?si=56PVHAL5yM-62KF5"
        },
        {
            "day": "2",
            "title": "Day 2: Basics of HTML",
            "body": "Today, we're diving into HTML (HyperText Markup Language), the backbone of all web pages. HTML is used to structure the content on the web. You’ll learn about tags, elements, and attributes, which are the building blocks of HTML. By the end of today, you’ll be able to create a basic HTML document with various common elements such as headings, paragraphs, and links.\n\nWhat to Learn:\n- Basic HTML structure\n- Common HTML tags (headings, paragraphs, links, images)\n- How to create and save an HTML file\n\nHow to Learn:\n- Follow the tutorial on W3Schools to learn and practice HTML basics.\n- Build a simple HTML page as you follow along.\n- Watch the video tutorial to reinforce your learning and see examples.",
            "resource_link": "https://www.w3schools.com/html/",
            "youtube_video": "https://www.youtube.com/embed/pQN-pnXPaVg?si=y6Mf52hQ3rcHRtrU"
        },
        {
            "day": "3",
            "title": "Day 3: Advanced HTML and Introduction to CSS",
            "body": "Now that you know the basics of HTML, it’s time to explore more advanced elements and attributes that HTML offers. We’ll also introduce CSS (Cascading Style Sheets), which is used to style and layout web pages. You’ll learn how to link CSS to your HTML and start adding styles to make your web pages visually appealing.\n\nWhat to Learn:\n- Advanced HTML elements (forms, tables, semantic tags)\n- Basic CSS syntax and how to link CSS to HTML\n- Styling text, colors, and backgrounds with CSS\n\nHow to Learn:\n- Read and follow the tutorials on W3Schools for advanced HTML and basic CSS.\n- Practice by enhancing your HTML page from Day 2 with new elements and styles.\n- Watch the video to see CSS in action and understand how it interacts with HTML.",
            "resource_link": "https://www.w3schools.com/html/html5_intro.asp",
            "youtube_video": "https://www.youtube.com/embed/mU6anWqZJcc?si=7gccnpDcS2ENA5hP"
        },
        {
            "day": "4",
            "title": "Day 4: CSS Basics",
            "body": "Today, we’ll delve deeper into CSS to further enhance the visual presentation of your web pages. You’ll learn about the box model, which is fundamental to understanding layout and design in CSS. Additionally, we’ll cover CSS selectors, properties, and how to use them to style various HTML elements.\n\nWhat to Learn:\n- CSS box model (margins, borders, padding, content)\n- CSS selectors and properties\n- How to apply styles to HTML elements\n\nHow to Learn:\n- Study the CSS box model and selectors on MDN Web Docs.\n- Experiment with different CSS properties to see their effects.\n- Watch the video to get a comprehensive overview of CSS basics.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics",
            "youtube_video": "https://www.youtube.com/embed/yfoY53QXEnI?si=KK4avMtBoo3-1BjA"
        },
        {
            "day": "5",
            "title": "Day 5: Responsive Design with Flexbox and Grid",
            "body": "Responsive design ensures your website looks great on all devices, from desktops to smartphones. Today, you’ll learn about CSS Flexbox and Grid, two powerful layout modules that help you create flexible and responsive web layouts. By mastering these tools, you can ensure your website adjusts beautifully to different screen sizes.\n\nWhat to Learn:\n- Basics of responsive design\n- Flexbox layout module\n- CSS Grid layout module\n\nHow to Learn:\n- Follow the guides on CSS-Tricks to learn about Flexbox and Grid.\n- Apply these techniques to your previous projects to make them responsive.\n- Watch the video tutorials to see practical examples and coding demos.",
            "resource_link": "https://css-tricks.com/snippets/css/a-guide-to-flexbox/",
            "youtube_video": "https://www.youtube.com/embed/JJSoEo8JSnc?si=BMcGbR2abfQic_9x"
        },
        {
            "day": "6",
            "title": "Day 6: Building a Personal Portfolio Website",
            "body": "Today, you'll put everything you've learned so far into practice by starting a project to build your personal portfolio website. This website will serve as a showcase of your skills and projects, and it will be a great addition to your professional portfolio. You'll design and structure your site, adding content and styling it with CSS.\n\nWhat to Learn:\n- Planning the layout and structure of a portfolio website\n- Implementing HTML and CSS to build the website\n- Best practices for creating a personal portfolio\n\nHow to Learn:\n- Follow the step-by-step video tutorial to build your portfolio website.\n- Customize the design and content to reflect your personal style and projects.\n- Use the resources to refine and improve your site.",
            "resource_link": "https://www.freecodecamp.org/learn/2022/responsive-web-design/learn-css-by-building-a-cafe-menu/",
            "youtube_video": "https://www.youtube.com/embed/27JtRAI3QO8?si=6dINUMFGF1U8dwmY"
        },
        {
            "day": "7",
            "title": "Day 7: Introduction to CSS Preprocessors (Sass)",
            "body": "As your CSS codebase grows, maintaining it can become challenging. CSS preprocessors like Sass (Syntactically Awesome Style Sheets) add powerful features such as variables, nested rules, and functions to CSS, making it more manageable and easier to maintain. Today, you'll get an introduction to Sass and learn how to integrate it into your workflow.\n\nWhat to Learn:\n- Basics of Sass and its features\n- Setting up and compiling Sass\n- Using Sass to write more efficient and manageable CSS\n\nHow to Learn:\n- Read the Sass guide to understand its core concepts and benefits.\n- Follow the tutorial on Codecademy to get hands-on experience with Sass.\n- Watch the video to see how Sass can simplify your CSS development process.",
            "resource_link": "https://sass-lang.com/guide",
            "youtube_video": "https://www.youtube.com/embed/Zz6eOVaaelI?si=mvqNM_CLs-8kBSp7"
        },
        {
            "day": "8",
            "title": "Day 8: Introduction to JavaScript",
            "body": "Welcome to JavaScript, the programming language of the web! JavaScript allows you to add interactive elements to your websites. Today, you'll learn the basics of JavaScript, including how to add JavaScript to your HTML, basic syntax, and data types. By the end of the day, you'll be able to write simple scripts that enhance the functionality of your web pages.\n\nWhat to Learn:\n- Basics of JavaScript\n- How to add JavaScript to HTML\n- Basic syntax and data types\n- Writing simple scripts\n\nHow to Learn:\n- Follow the tutorial on W3Schools to learn the basics of JavaScript.\n- Practice writing simple JavaScript scripts and adding them to your HTML.\n- Watch the video tutorial to see examples and deepen your understanding.",
            "resource_link": "https://www.w3schools.com/js/",
            "youtube_video": "https://www.youtube.com/embed/W6NZfCO5SIk"
        },
        {
            "day": "9",
            "title": "Day 9: JavaScript Variables and Data Types",
            "body": "Today, we'll dive deeper into JavaScript by exploring variables and data types. Variables allow you to store and manipulate data in your scripts. Understanding data types is essential for writing efficient and bug-free code. By the end of the day, you'll be comfortable with declaring variables and using different data types in JavaScript.\n\nWhat to Learn:\n- Declaring variables\n- Different data types in JavaScript (strings, numbers, booleans, arrays, objects)\n- Basic operations on variables\n\nHow to Learn:\n- Study the variables and data types section on MDN Web Docs.\n- Experiment with declaring variables and performing operations in your browser's console.\n- Watch the video to see practical examples and explanations.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types",
            "youtube_video": "https://www.youtube.com/embed/hdI2bqOjy3c"
        },
        {
            "day": "10",
            "title": "Day 10: JavaScript Functions and Scope",
            "body": "Functions are a core concept in JavaScript, allowing you to encapsulate code for reuse and modularity. Today, you'll learn how to define and invoke functions, understand function scope, and differentiate between local and global variables. By mastering functions, you'll be able to write more organized and maintainable code.\n\nWhat to Learn:\n- Defining and invoking functions\n- Function parameters and return values\n- Understanding scope (local vs. global variables)\n\nHow to Learn:\n- Follow the functions tutorial on W3Schools to understand the basics.\n- Practice writing functions and experiment with scope.\n- Watch the video to get a deeper understanding of functions and scope.",
            "resource_link": "https://www.w3schools.com/js/js_functions.asp",
            "youtube_video": "https://www.youtube.com/embed/iLWTnMzWtj4"
        },
        {
            "day": "11",
            "title": "Day 11: JavaScript Control Structures",
            "body": "Control structures allow you to control the flow of your code based on conditions and loops. Today, you'll learn about conditional statements (if, else if, else) and loops (for, while). By the end of the day, you'll be able to write scripts that make decisions and repeat actions based on conditions.\n\nWhat to Learn:\n- Conditional statements (if, else if, else)\n- Comparison and logical operators\n- Loops (for, while)\n\nHow to Learn:\n- Study the control structures section on MDN Web Docs.\n- Practice writing scripts with conditional statements and loops.\n- Watch the video to see examples and understand how to use control structures effectively.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling",
            "youtube_video": "https://www.youtube.com/embed/IsG4Xd6LlsM"
        },
        {
            "day": "12",
            "title": "Day 12: JavaScript Arrays and Objects",
            "body": "Arrays and objects are fundamental data structures in JavaScript. Arrays allow you to store lists of values, while objects let you store collections of key-value pairs. Today, you'll learn how to create and manipulate arrays and objects, and understand their use cases.\n\nWhat to Learn:\n- Creating and accessing arrays\n- Array methods (push, pop, shift, unshift, etc.)\n- Creating and accessing objects\n- Object methods and properties\n\nHow to Learn:\n- Follow the arrays and objects tutorials on W3Schools.\n- Experiment with arrays and objects in your code.\n- Watch the video to see practical examples and applications of arrays and objects.",
            "resource_link": "https://www.w3schools.com/js/js_arrays.asp",
            "youtube_video": "https://www.youtube.com/embed/W1NTK09o-vM"
        },
        {
            "day": "13",
            "title": "Day 13: JavaScript Events and DOM Manipulation",
            "body": "JavaScript can interact with the HTML of your web pages through the DOM (Document Object Model). Today, you'll learn how to manipulate the DOM and handle events (like clicks and form submissions) to make your web pages interactive. This is a crucial step towards creating dynamic web applications.\n\nWhat to Learn:\n- Understanding the DOM\n- Selecting and manipulating DOM elements\n- Handling events (click, input, etc.)\n\nHow to Learn:\n- Read the DOM manipulation guide on MDN Web Docs.\n- Practice by creating a simple interactive web page that responds to user actions.\n- Watch the video to see how to manipulate the DOM and handle events effectively.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction",
            "youtube_video": "https://www.youtube.com/embed/0ik6X4DJKCc"
        },
        {
            "day": "14",
            "title": "Day 14: Building a Simple JavaScript Application",
            "body": "It's time to put together everything you've learned this week by building a simple JavaScript application. This project will help you solidify your understanding of JavaScript basics, functions, control structures, arrays, objects, and DOM manipulation. By the end of the day, you'll have a working application that you can showcase in your portfolio.\n\nWhat to Learn:\n- Planning and structuring a JavaScript project\n- Integrating various JavaScript concepts\n- Debugging and testing your code\n\nHow to Learn:\n- Follow the step-by-step tutorial to build a simple JavaScript application.\n- Apply the concepts you've learned throughout the week to complete the project.\n- Watch the video for additional guidance and tips on building your application.",
            "resource_link": "https://www.freecodecamp.org/news/javascript-projects-for-beginners/",
            "youtube_video": "https://www.youtube.com/embed/PkZNo7MFNFg"
        },
        {
            "day": "15",
            "title": "Day 15: Introduction to JavaScript ES6 Features",
            "body": "Welcome to a new week of your web development journey! Today, we'll start exploring ES6 (ECMAScript 2015) features in JavaScript. ES6 introduced many new features and improvements to JavaScript, making it more powerful and easier to write. You'll learn about let and const, template literals, arrow functions, and more.\n\nWhat to Learn:\n- let and const keywords\n- Template literals\n- Arrow functions\n- Destructuring assignment\n\nHow to Learn:\n- Study the ES6 features tutorial on MDN Web Docs.\n- Practice writing code using these new features.\n- Watch the video tutorial to see examples and explanations.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Introduction#ECMAScript_6_Support_in_Mozilla",
            "youtube_video": "https://www.youtube.com/embed/NCwa_xi0Uuc"
        },
        {
            "day": "16",
            "title": "Day 16: JavaScript Promises and Asynchronous Programming",
            "body": "Asynchronous programming is essential for handling tasks like data fetching in JavaScript. Today, you'll learn about Promises, a key feature in ES6 that makes asynchronous code easier to write and manage. By the end of the day, you'll understand how to create and use Promises, and how they fit into the broader concept of asynchronous programming.\n\nWhat to Learn:\n- Basics of asynchronous programming\n- Understanding Promises\n- Creating and using Promises\n- Chaining Promises\n\nHow to Learn:\n- Read the Promises guide on MDN Web Docs.\n- Practice by writing asynchronous code using Promises.\n- Watch the video to see practical examples of Promises and asynchronous programming.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises",
            "youtube_video": "https://www.youtube.com/embed/DHvZLI7Db8E"
        },
        {
            "day": "17",
            "title": "Day 17: Fetch API and AJAX",
            "body": "Today, you'll learn how to make HTTP requests from your JavaScript code using the Fetch API and AJAX. These technologies allow you to communicate with servers, fetch data, and update your web pages without reloading. By mastering these techniques, you'll be able to create dynamic and interactive web applications.\n\nWhat to Learn:\n- Basics of Fetch API\n- Making GET and POST requests\n- Handling responses and errors\n- Introduction to AJAX\n\nHow to Learn:\n- Study the Fetch API documentation on MDN Web Docs.\n- Practice making HTTP requests and handling responses.\n- Watch the video to see how to use Fetch API and AJAX in real projects.",
            "resource_link": "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
            "youtube_video": "https://www.youtube.com/embed/Oive66jrwBs"
        },
        {
            "day": "18",
            "title": "Day 18: Introduction to JavaScript Frameworks (React)",
            "body": "JavaScript frameworks and libraries make it easier to build complex and scalable web applications. Today, you'll get an introduction to React, one of the most popular JavaScript libraries for building user interfaces. You'll learn the basics of React, including components, JSX, and state.\n\nWhat to Learn:\n- Basics of React\n- Understanding components\n- JSX syntax\n- Managing state\n\nHow to Learn:\n- Follow the React tutorial on the official React website.\n- Build a simple React application to get hands-on experience.\n- Watch the video to see how React works and how to get started.",
            "resource_link": "https://reactjs.org/tutorial/tutorial.html",
            "youtube_video": "https://www.youtube.com/embed/Ke90Tje7VS0"
        },
        {
            "day": "19",
            "title": "Day 19: React Components and Props",
            "body": "Today, we'll dive deeper into React by exploring components and props. Components are the building blocks of a React application, and props allow you to pass data between components. By the end of the day, you'll be able to create reusable components and manage data flow in your React applications.\n\nWhat to Learn:\n- Creating and using components\n- Understanding props\n- Passing data between components\n- Component lifecycle methods\n\nHow to Learn:\n- Study the components and props section on the React documentation.\n- Practice building components and passing props in your React application.\n- Watch the video to see examples of components and props in action.",
            "resource_link": "https://reactjs.org/docs/components-and-props.html",
            "youtube_video": "https://www.youtube.com/embed/MhkGQAoc7bc"
        },
        {
            "day": "20",
            "title": "Day 20: State and Lifecycle in React",
            "body": "State is a powerful feature in React that allows you to create dynamic and interactive components. Today, you'll learn how to manage state in your components and understand the component lifecycle. By mastering state and lifecycle methods, you'll be able to create more complex and responsive React applications.\n\nWhat to Learn:\n- Managing state in components\n- Component lifecycle methods\n- Handling events in React\n- Conditional rendering\n\nHow to Learn:\n- Follow the state and lifecycle tutorial on the React documentation.\n- Practice managing state and using lifecycle methods in your React application.\n- Watch the video to get a deeper understanding of state and lifecycle in React.",
            "resource_link": "https://reactjs.org/docs/state-and-lifecycle.html",
            "youtube_video": "https://www.youtube.com/embed/4pO-HcG2igk"
        },
        {
            "day": "21",
            "title": "Day 21: Building a React Application",
            "body": "It's time to put everything you've learned this week into practice by building a React application. This project will help you solidify your understanding of React components, state, props, and lifecycle methods. By the end of the day, you'll have a functional React application that you can add to your portfolio.\n\nWhat to Learn:\n- Planning and structuring a React project\n- Integrating various React concepts\n- Debugging and testing your React application\n\nHow to Learn:\n- Follow the step-by-step tutorial to build a React application.\n- Apply the concepts you've learned throughout the week to complete the project.\n- Watch the video for additional guidance and tips on building your React application.",
            "resource_link": "https://www.freecodecamp.org/news/react-projects-for-beginners/",
            "youtube_video": "https://www.youtube.com/embed/sBws8MSXN7A"
        }
    ]
}